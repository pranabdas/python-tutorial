"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([["9067"],{3045:function(t,o,a){a.r(o),a.d(o,{frontMatter:()=>l,default:()=>m,toc:()=>s,metadata:()=>e,assets:()=>i,contentTitle:()=>p});var e=JSON.parse('{"id":"matplotlib/custom-colormap","title":"Creating custom colormaps","description":"Matplotlib includes wonderful colormaps. Moreover, it is possible to create any","source":"@site/docs/matplotlib/custom-colormap.md","sourceDirName":"matplotlib","slug":"/matplotlib/custom-colormap","permalink":"/python-tutorial/matplotlib/custom-colormap","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/python-tutorial/blob/main/docs/matplotlib/custom-colormap.md","tags":[],"version":"current","frontMatter":{"title":"Creating custom colormaps","sidebar_label":"Custom colormap"},"sidebar":"docs","previous":{"title":"Customizing matplotlib","permalink":"/python-tutorial/matplotlib/mpl-customizations"},"next":{"title":"numpy","permalink":"/python-tutorial/category/numpy"}}'),n=a(5893),r=a(65);let l={title:"Creating custom colormaps",sidebar_label:"Custom colormap"},p=void 0,i={},s=[];function c(t){let o={code:"code",p:"p",pre:"pre",...(0,r.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["Matplotlib includes wonderful colormaps. Moreover, it is possible to create any\ncustom colormap we want. We need the RGB values in a file. We could also include\nalpha (transparency) values in 4",(0,n.jsx)("sup",{children:"th"})," column."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",metastring:"showLineNumbers",children:'import matplotlib.pyplot as plt\n%matplotlib inline\nplt.rcParams["figure.dpi"]=150\nplt.rcParams["figure.facecolor"]="white"\n\nimport sys\nsys.path.append("/root/")\n# https://github.com/pranabdas/arpespythontools\nimport arpespythontools as arp\n\ndef create_cmap(data_path):\n    import numpy as np\n    from matplotlib.colors import ListedColormap\n    contents = open(data_path, "r").readlines()\n    cmap_length = len(contents)\n    cmap = np.ndarray((cmap_length, 4))\n\n    for ii in range(cmap_length):\n        cmap_row = contents[ii][:-1].split(\'\\t\')\n        cmap[ii, 0] = cmap_row[0]\n        cmap[ii, 1] = cmap_row[1]\n        cmap[ii, 2] = cmap_row[2]\n        cmap[ii, 3] = 1  # Default alpha\n    cmap = ListedColormap(cmap)\n    return cmap\n\nmy_cmap = create_cmap("../datafiles/cmap_blue_hot.dat")\n[data, x, y] = arp.import_itx(\'../datafiles/GX.itx\')\n\nplt.imshow(data, aspect=\'auto\', origin="lower", interpolation=\'none\', \\\n    filterrad=4.0, cmap=my_cmap, vmin=0, vmax=600)\n# plt.set_cmap(\'gist_heat_r\')\nplt.show()\n'})}),"\n",(0,n.jsx)("img",{src:a(994).Z,alt:"custom-colormap"})]})}function m(t={}){let{wrapper:o}={...(0,r.a)(),...t.components};return o?(0,n.jsx)(o,{...t,children:(0,n.jsx)(c,{...t})}):c(t)}},994:function(t,o,a){a.d(o,{Z:()=>e});let e=a.p+"assets/images/custom-colormap-ba5a3f81025d107253a6d64c71db1d81.webp"},65:function(t,o,a){a.d(o,{Z:()=>p,a:()=>l});var e=a(7294);let n={},r=e.createContext(n);function l(t){let o=e.useContext(r);return e.useMemo(function(){return"function"==typeof t?t(o):{...o,...t}},[o,t])}function p(t){let o;return o=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:l(t.components),e.createElement(r.Provider,{value:o},t.children)}}}]);