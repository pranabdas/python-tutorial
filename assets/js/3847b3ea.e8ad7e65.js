"use strict";(self.webpackChunkpython_tutorial=self.webpackChunkpython_tutorial||[]).push([["6230"],{4531:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,default:()=>p,toc:()=>c,metadata:()=>s,assets:()=>r,contentTitle:()=>o});var s=JSON.parse('{"id":"setup","title":"Setup","description":"Installing Python 3","source":"@site/docs/setup.md","sourceDirName":".","slug":"/","permalink":"/python-tutorial/","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/python-tutorial/blob/main/docs/setup.md","tags":[],"version":"current","frontMatter":{"title":"Setup","slug":"/","keywords":["python","programming","tutorial","jupyter","matplotlib","numpy","pandas","scipy","data visualization","numerical python"]},"sidebar":"docs","next":{"title":"Basics","permalink":"/python-tutorial/category/basics"}}'),i=t(5893),a=t(65);let l={title:"Setup",slug:"/",keywords:["python","programming","tutorial","jupyter","matplotlib","numpy","pandas","scipy","data visualization","numerical python"]},o=void 0,r={},c=[{value:"Installing Python 3",id:"installing-python-3",level:2},{value:"pip",id:"pip",level:2},{value:"Installing Jupyterlab",id:"installing-jupyterlab",level:2},{value:"virtualenv",id:"virtualenv",level:2},{value:"venv",id:"venv",level:2},{value:"Pyenv",id:"pyenv",level:2},{value:"Docker",id:"docker",level:2},{value:"Intel\xae Distribution for Python",id:"intel-distribution-for-python",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"installing-python-3",children:"Installing Python 3"}),"\n",(0,i.jsx)(n.p,{children:"If you use macOS (Big Sur/11 or higher), you should have Python 3 already\ninstalled. However, you might need to install Xcode Command Line Tools, you can\ndo that by opening Terminal and issuing following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"xcode-select --install\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can check whether Python 3 is installed in your system or not by typing\nfollowing in a terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3 --version\n"})}),"\n",(0,i.jsx)(n.p,{children:"If python 3 is installed, it will print the version number, otherwise you will\nsee some sort of error."}),"\n",(0,i.jsx)(n.p,{children:"If you use Ubuntu/Debian, you can install Python and pip (python package\nmanager) by:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install python3 python3-pip\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you use Windows, you can go to ",(0,i.jsx)(n.a,{href:"https://www.python.org",children:"https://www.python.org"}),", download and install\nthe latest version of Python 3."]}),"\n",(0,i.jsx)(n.h2,{id:"pip",children:"pip"}),"\n",(0,i.jsxs)(n.p,{children:["We can install python packages using the ",(0,i.jsx)(n.code,{children:"pip"})," package manager. To install a\nspecific package:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install <package-name>\npip install numpy\npip install scipy matplotlib  # install multiple packages\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Note that in some operating systems, ",(0,i.jsx)(n.code,{children:"pip"})," is referred as ",(0,i.jsx)(n.code,{children:"pip3"})," specifically\nfor the version corresponding to Python 3."]})}),"\n",(0,i.jsx)(n.p,{children:"We can list outdated python packages by:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip list --outdated\n"})}),"\n",(0,i.jsx)(n.p,{children:"We can update outdated python packages by:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install --upgrade <package-name>\npip install --upgrade jupyterlab\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"--upgrade"})," flag can be used even if the package is not already installed,\nit will install the latest version. If a package is installed and a newer\nversion is available, it will upgrade to the latest version."]})}),"\n",(0,i.jsxs)(n.p,{children:["You can install a list of python packages from a ",(0,i.jsx)(n.a,{href:"https://github.com/pranabdas/python-tutorial/blob/master/requirements.txt",children:"requirements.txt"})," file.\nList each package name on separate line:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="requirements.txt" showLineNumbers',children:"jupyterlab\nnumpy\nscipy\nmatplotlib\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Installing a list of packages from ",(0,i.jsx)(n.code,{children:"requirements.txt"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install --upgrade -r requirements.txt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"installing-jupyterlab",children:"Installing Jupyterlab"}),"\n",(0,i.jsx)(n.p,{children:"Jupyter notebook is a convenient way to run and document your python code. We\ncan install Jupyterlab by issuing following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install jupyterlab\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now we can launch Jupyterlab by typing ",(0,i.jsx)(n.code,{children:"jupyter-lab"})," in the terminal."]}),"\n",(0,i.jsx)(n.h2,{id:"virtualenv",children:"virtualenv"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"virtualenv"})," is a powerful way to manage dependencies in a python project. We\noften need some python packages specific to a project. Therefore it is not a\ngood idea to install every python packages globally. Instead we can use\n",(0,i.jsx)(n.code,{children:"virtualenv"})," and keep our specific python packages local to that specific\nproject. First we need to install ",(0,i.jsx)(n.code,{children:"virtualenv"})," globally though:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install --upgrade virtualenv\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Activate ",(0,i.jsx)(n.code,{children:"virtualenv"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd my-project/\nvirtualenv venv\nsource venv/bin/activate\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now we can install dependencies using ",(0,i.jsx)(n.code,{children:"pip"}),", and it will be stored inside the\n",(0,i.jsx)(n.code,{children:"venv"})," directory."]}),"\n",(0,i.jsxs)(n.p,{children:["To leave the ",(0,i.jsx)(n.code,{children:"virtualenv"})," run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"deactivate\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"requirements.txt"})," to list all required python packages for a project,\nand include ",(0,i.jsx)(n.code,{children:"venv"})," path in the ",(0,i.jsx)(n.code,{children:".gitigone"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"venv",children:"venv"}),"\n",(0,i.jsxs)(n.p,{children:["The inbuilt ",(0,i.jsx)(n.code,{children:"venv"})," Python3 module serves the same purpose as the popular\n",(0,i.jsx)(n.a,{href:"#virtualenv",children:"virtualenv"})," package. Although, ",(0,i.jsx)(n.code,{children:"venv"})," lacks some feature sets of\n",(0,i.jsx)(n.code,{children:"virtualenv"}),", it is probably sufficient in most cases."]}),"\n",(0,i.jsxs)(n.p,{children:["Create virtual environment using ",(0,i.jsx)(n.code,{children:"venv"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python -m venv <virtual-env-name>\npython -m venv venv\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Other commands are same as ",(0,i.jsx)(n.code,{children:"virtualenv"}),". Activate virtual environment:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source venv/bin/activate\n"})}),"\n",(0,i.jsx)(n.p,{children:"Deactivate/exit virtual environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"deactivate\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pyenv",children:"Pyenv"}),"\n",(0,i.jsxs)(n.p,{children:["If you need multiple versions of Python (say, different projects requires\ndifferent version of Python, or you want to test your code on multiple versions)\nin the same system, ",(0,i.jsx)(n.a,{href:"https://github.com/pyenv/pyenv",children:"pyenv"})," gives handy way to\nswitch between different versions of Python."]}),"\n",(0,i.jsxs)(n.p,{children:["If you are using macOS, you can install ",(0,i.jsx)(n.code,{children:"pyenv"})," via ",(0,i.jsx)(n.code,{children:"homebrew"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"brew update && brew install pyenv\n"})}),"\n",(0,i.jsx)(n.p,{children:"On Linux you may use following installation script:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# make sure you have curl\nsudo apt update && sudo apt install -y --no-install-recommends curl\ncurl https://pyenv.run | bash\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After installation, you need to add following to your ",(0,i.jsx)(n.code,{children:".bashrc"})," or ",(0,i.jsx)(n.code,{children:".zshrc"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'export PYENV_ROOT="$HOME/.pyenv"\ncommand -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"\neval "$(pyenv init -)"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Useful ",(0,i.jsx)(n.code,{children:"pyenv"})," commands:"]}),"\n",(0,i.jsx)(n.p,{children:"List installed python versions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pyenv versions\n"})}),"\n",(0,i.jsx)(n.p,{children:"Install a new version of Python:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pyenv install 3.10\n"})}),"\n",(0,i.jsx)(n.p,{children:"Switch version:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pyenv global 3.10\n"})}),"\n",(0,i.jsx)(n.p,{children:"Uninstall a version:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pyenv uninstall 3.10.12\n"})}),"\n",(0,i.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,i.jsxs)(n.p,{children:["We can run our whole python setup inside a container, isolated from our main\noperating system. First you need to install ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"docker"}),". Then we can build our container image\nusing ",(0,i.jsx)(n.a,{href:"https://github.com/pranabdas/python-tutorial/blob/master/Dockerfile",children:"Dockerfile"}),", you can\nadjust according to your needs."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dockerfile",metastring:'title="Dockerfile" showLineNumbers',children:'# Start from Ubuntu 22.04 LTS\nFROM ubuntu:jammy\n\n# Update OS\nRUN apt update && apt upgrade -y\n\n# Install software packages\nRUN apt install -y python3 python3-pip\n\n# Install pip packages\nRUN pip3 install jupyterlab numpy scipy matplotlib\n\n# jupyter-lab settings\nRUN mkdir /etc/jupyter && \\\n    (echo "c.ServerApp.ip = \'0.0.0.0\'" && \\\n     echo "c.ServerApp.allow_root = True" && \\\n     echo "c.ServerApp.open_browser = False") \\\n        >> /etc/jupyter/jupyter_server_config.py\n\n# leave in `/home` which we can map with the host\nWORKDIR /home\n'})}),"\n",(0,i.jsx)(n.p,{children:"Build the Docker image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker build -t jupyter .\n"})}),"\n",(0,i.jsx)(n.p,{children:"Run Docker (you can either forward a specific port or if are using Linux, map\nhost network):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker run -ti -p 8888:8888 -v ${PWD}:/home jupyter bash\ndocker run -ti --net=host -v /host/path:/home jupyter bash\n"})}),"\n",(0,i.jsx)(n.p,{children:"Launch Jupyter notebook inside the container:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"jupyter-lab\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now we can create a new python 3 notebook, and start writing our python code.\nIn order to properly close a notebook, save the notebook (either from ",(0,i.jsx)(n.em,{children:"File"}),"\nmenu or the save icon) \u2192 ",(0,i.jsx)(n.em,{children:"Close and Shutdown the Notebook"})," (from ",(0,i.jsx)(n.em,{children:"File"})," menu),\nand finally shutdown the Jupyter server from the ",(0,i.jsx)(n.em,{children:"File"})," menu \u2192 ",(0,i.jsx)(n.em,{children:"Shut down"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"intel-distribution-for-python",children:"Intel\xae Distribution for Python"}),"\n",(0,i.jsxs)(n.p,{children:["For running computational intensive tasks, you might consider using\n",(0,i.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/developer/tools/oneapi/distribution-for-python.html",children:(0,i.jsx)(n.strong,{children:"Intel\xae Distribution for Python"})}),",\nwhich could be better optimized for Intel processors and perform better in some\ncases. In my experience, it is not consistently better in all scenarios."]}),"\n",(0,i.jsx)(n.p,{children:"Install Intel\xae distribution for python:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://registrationcenter-download.intel.com/akdlm/irc_nas/19093/l_pythoni39_oneapi_p_2023.0.0.25636_offline.sh\nsudo sh ./l_pythoni39_oneapi_p_2023.0.0.25636_offline.sh -a --silent --eula accept\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you need more tools such as TensorFlow, PyTorch, XGBoost etc., install\n",(0,i.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/developer/tools/oneapi/ai-analytics-toolkit.html",children:(0,i.jsx)(n.strong,{children:"Intel\xae AI Analytics Toolkit"})}),"\ninstead (some of the packages are available as standalone downloadable component\nas well):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://registrationcenter-download.intel.com/akdlm/irc_nas/19090/l_AIKit_p_2023.0.0.26100_offline.sh\n\n# install everything bundled in the toolkit\nsudo sh ./l_AIKit_p_2023.0.0.26100_offline.sh -a --silent --eula accept\n\n# list components bundled in toolkit\nsh ./l_AIKit_p_2023.0.0.26100_offline.sh -a --list-components\n\n# install subset of components:\nsudo sh ./l_AIKit_p_2023.0.0.26100_offline.sh -a --silent --eula accept --components intel.oneapi.lin.python3:intel.oneapi.lin.tensorflow:intel.oneapi.lin.pytorch\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initialize oneAPI environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source /opt/intel/oneapi/setvars.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can confirm intel python:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python --version\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can install additional python packages via ",(0,i.jsx)(n.code,{children:"pip"})," or ",(0,i.jsx)(n.code,{children:"conda"}),"."]})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65:function(e,n,t){t.d(n,{Z:()=>o,a:()=>l});var s=t(7294);let i={},a=s.createContext(i);function l(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);